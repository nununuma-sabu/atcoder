"""
N(N>=3)個のパーツで構成されたリングがある
最初、左手はパーツ1、右手はパーツ2を握っている
1回の操作で以下を行う。
・片方の手を今握っているパーツに隣接するパーツのいずれかに移動
  ※移動先にもう一方の手がない場合に限る
指示がQ回出される
L a:左手をaに移動させる
R a:右手をaに移動させる
全ての指示に従うための最小操作回数を求める
"""

N, Q = map(int, input().split())
l = 1
r = 2
ans = 0

for _ in range(Q):
    H, T = input().split()
    T = int(T)

    # 指示が右手の場合
    if H == "R":
        # 右手と目標との間に左手がある場合
        if T <= l <= r or r <= l <= T:
            ans += N - abs(T - r)
        # 右手と目標との間に左手がない場合
        else:
            ans += abs(T - r)
        r = T
    # 指示が左手の場合
    else:
        # 左手と目標との間に右手がある場合
        if T <= r <= l or l <= r <= T:
            ans += N - abs(T - l)
        # 左手と目標との間に左手がない場合
        else:
            ans += abs(T - l)
        l = T

print(ans)
