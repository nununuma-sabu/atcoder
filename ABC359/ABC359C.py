# 2*1 のタイルが敷き詰められている
# タイルをまたぐごとに通行料1
# 最初(Sx+0.5, Sy+0.5)にいる
# (Tx+0.5, Ty+0.5)に移動するのに必要な最小の通行料

# x,y座標の偶奇が同じ→タイルの左側
# x,y座標の偶奇が異なる→タイルの右側
# スタートとゴールの点がタイルの左側になるようにする

Sx, Sy = map(int, input().split())
Tx, Ty = map(int, input().split())

if (Sx + Sy) % 2 != 0:
    Sx -= 1
if (Tx + Ty) % 2 != 0:
    Tx -= 1

# (Sx,Sy)を原点とする
Tx -= Sx
Ty -= Sy

# マイナスの座標があったらプラスに
Tx = abs(Tx)
Ty = abs(Ty)

# y座標がTyと一致するまで右上((1,1)方向)に上がっていく
# Ty回タイルをまたぐ
# (0,0)->(Ty,Ty)
ans = Ty
# 一致したらあとは横に移動(Ty,Ty)->(Tx,Ty)(つまり横にTx-Ty)
# 横に2だけ動くとタイルをまたぐ
ans += max(0, Tx - Ty) // 2

print(ans)
